{"version":3,"sources":["all.min.js","_.mixins.js","cn-util.js"],"names":["nth","array","n","length","l","isFalsy","x","_","isObject","isDate","isRegExp","isEmpty","falsy","k","allEqual","vals","first","isArray","map","v","JSON","stringify","all","uniq","empty","obj","each","val","key","add","slice","call","arguments","reduce","a","b","parseFloat","Math","round","subtract","multiply","divide","p","pow","floor","ceil","percentage","overflow","result","range","start","end","Number","dir","push","mixin","_typeof","Symbol","iterator","constructor","angular","module","factory","cleanModel","model","cleanModelVal","modelVal","forEach","undefined","diff","original","current","deep","removeStrategy","getModified","copy","shallow","removeHandler","removeStretegies","eq","equals","_ret","modified","cleanEmptyJson","tmp","i","ret","isUndefined","ta","tb","ks","getTime","toString","Object","create","charAt","isFunction","inheritCommon","from","to","extend","base","sub","ogProto","prototype","defineProperty","enumerable","value","constructErrorMessageAsHtml","errors","errorMessage","error","description","constructPopoverHtml","objectsArray","nameKey","idKey","object","popoverHtml","delete","null","window","cnUtil"],"mappings":"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","file":"all.min.js","sourcesContent":["'use strict';\n\n(function () {\n  'use strict';\n\n  /**\n   * Some useful util functions to add to lodash/underscore\n   *\n   * author: dzuch\n   */\n\n  _.mixin({\n    allEqual: allEqual,\n    empty: empty,\n    add: add,\n    subtract: subtract,\n    multiply: multiply,\n    divide: divide,\n    round: round,\n    floor: floor,\n    ceil: ceil,\n    percentage: percentage,\n    isFalsy: isFalsy,\n    /* deprecate if upgrading lodash to v4 */\n    nth: nth,\n\n    /* TODO: remove this, not needed and can achieve with lodash\n     * Override lodash's range to allow high to low ranges\n     */\n    range: range\n  });\n\n  ////////\n\n  function nth(array, n) {\n    if (array && array.length) {\n      var l = array.length;\n      n += n < 0 ? l : 0;\n      if (n > l) return array[n];\n    }\n  }\n\n  function isFalsy(x) {\n    if (!x) return true;\n    if (_.isObject(x)) {\n      if (_.isDate(x) || _.isRegExp(x)) return false;\n      if (_.isEmpty(x)) return true;\n      var falsy = true;\n      for (var k in x) {\n        if (!_.isFalsy(x[k])) falsy = false;\n      }\n      return falsy;\n    }\n    return false;\n  }\n\n  function allEqual(vals) {\n    var first = _.first(vals);\n    if (_.isArray(first) && !_.isObject(_.first(first))) {\n      return _.allEqual(vals.map(function (v) {\n        return JSON.stringify(v);\n      }));\n    }\n    if (_.isObject(first)) {\n      return _.all(vals, first);\n    }\n    return _.uniq(vals).length === 1;\n  }\n\n  function empty(obj) {\n    if (_.isArray(obj)) {\n      obj.length = 0;\n      return obj;\n    }\n    _.each(obj, function (val, key) {\n      delete obj[key];\n    });\n    return obj;\n  }\n\n  function add(x) {\n    x = _.isArray(x) ? x : [].slice.call(arguments);\n\n    return _.reduce(x, function (a, b) {\n      a = parseFloat(a);\n      b = parseFloat(b);\n      return (Math.round(a * 100) + Math.round(b * 100)) / 100;\n    });\n  }\n\n  function subtract(x) {\n    x = _.isArray(x) ? x : [].slice.call(arguments);\n\n    return _.reduce(x, function (a, b) {\n      a = parseFloat(a);\n      b = parseFloat(b);\n      return (Math.round(a * 100) - Math.round(b * 100)) / 100;\n    });\n  }\n\n  function multiply(x) {\n    x = _.isArray(x) ? x : [].slice.call(arguments);\n\n    return _.reduce(x, function (a, b) {\n      a = parseFloat(a);\n      b = parseFloat(b);\n      return Math.round(a * 100) * Math.round(b * 100) / 10000;\n    });\n  }\n\n  function divide(x) {\n    x = _.isArray(x) ? x : [].slice.call(arguments);\n\n    return _.reduce(x, function (a, b) {\n      a = parseFloat(a);\n      b = parseFloat(b);\n      return Math.round(a * 100) / Math.round(b * 100);\n    });\n  }\n\n  function round(x, p) {\n    p = Math.pow(10, p || 0);\n    return Math.round(parseFloat(x) * p) / p;\n  }\n\n  function floor(x, p) {\n    p = Math.pow(10, p || 0);\n    return Math.floor(parseFloat(x) * p) / p;\n  }\n\n  function ceil(x, p) {\n    p = Math.pow(10, p || 0);\n    return Math.ceil(parseFloat(x) * p) / p;\n  }\n\n  function percentage(a, b, overflow) {\n    var result = _.round(100 * a / b);\n    if (!overflow) {\n      if (result > 100) result = 100;else if (result < 0) result = 0;\n    }\n    return result;\n  }\n\n  function range(start, end) {\n    start = Number(start);\n    end = Number(end);\n    var result = [],\n        dir = start <= end ? 1 : -1;\n    //end = end + dir;\n    while (start !== end) {\n      result.push(start);\n      start += dir;\n    }\n    return result;\n  }\n})();\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\n(function () {\n  'use strict';\n  /**\n   * Definition for the cn.model module\n   */\n\n  angular.module('cn.util', []).factory('cnUtil', function () {\n    var removeStretegies = {\n      'delete': function _delete(obj, key) {\n        delete obj[key];\n      },\n      'null': function _null(obj, key) {\n        obj[key] = null;\n      }\n    };\n\n    window.cnUtil = {\n      cleanModel: cleanModel,\n      cleanModelVal: cleanModelVal,\n      cleanEmptyJson: cleanEmptyJson,\n      diff: diff,\n      getModified: getModified,\n      inheritCommon: inheritCommon,\n      extend: extend,\n      constructErrorMessageAsHtml: constructErrorMessageAsHtml,\n      constructPopoverHtml: constructPopoverHtml,\n      equals: equals\n    };\n\n    return {\n      cleanModel: cleanModel,\n      cleanModelVal: cleanModelVal,\n      cleanEmptyJson: cleanEmptyJson,\n      diff: diff,\n      getModified: getModified,\n      inheritCommon: inheritCommon,\n      extend: extend,\n      constructErrorMessageAsHtml: constructErrorMessageAsHtml,\n      constructPopoverHtml: constructPopoverHtml,\n      equals: equals\n    };\n\n    /////////\n\n    function cleanModel(model) {\n      _.each(model, cleanModelVal);\n      return model;\n    }\n\n    function cleanModelVal(modelVal) {\n      // if array,\n      if (_.isArray(modelVal)) {\n        modelVal.forEach(cleanModelVal);\n      } else if (_.isObject(modelVal)) {\n        _.each(modelVal, function (val, key) {\n          if (val === null || val === undefined) delete modelVal[key];else if (_.isArray(val)) val.forEach(cleanModelVal);else if (_.isObject(val)) cleanModelVal(val);\n        });\n      }\n      //return modelVal;\n    }\n\n    function diff(original, current, deep, removeStrategy) {\n      return getModified(original, current, removeStrategy, !deep);\n    }\n\n    function getModified(original, copy, removeStrategy, shallow) {\n      //console.log('getModified:', removeStrategy, shallow);\n      var removeHandler = removeStretegies[removeStrategy] || removeStretegies[null];\n      var eq = shallow ? equals : angular.equals;\n\n      // console.log('copy, original:', shallow, copy, original, eq(original, copy));\n      if (eq(original, copy)) return;\n      if (_.isObject(copy) && !_.isArray(copy)) {\n        var _ret = function () {\n          var modified = {};\n          _.each(copy, function (val, key) {\n            if (shallow) {\n              if (!eq(val, original[key])) {\n                modified[key] = cleanEmptyJson(val, original[key]);\n              }\n            } else {\n              var tmp = original[key] ? getModified(original[key], val, removeStrategy) : val;\n              if (tmp !== undefined && !eq(original[key], tmp)) modified[key] = tmp;\n            }\n          });\n          _.each(original, function (val, key) {\n            if (val && (copy[key] === null || copy[key] === undefined)) {\n              removeHandler(modified, key);\n            }\n          });\n          return {\n            v: _.isEmpty(modified) ? undefined : modified\n          };\n        }();\n\n        if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n      }\n      return copy;\n    }\n\n    function cleanEmptyJson(copy, original) {\n      if (_.isArray(copy)) {\n        return _.map(copy, function (x, i) {\n          return cleanEmptyJson(x, original ? original[i] : undefined);\n        });\n      }\n      if (_.isObject(copy)) {\n        var ret = {},\n            k = undefined,\n            v = undefined,\n            a = undefined,\n            b = undefined;\n        for (k in copy) {\n          a = copy[k];\n          b = _.nth(original, k);\n          if (!_.isFalsy(a) || a === false && a !== b) {\n            v = cleanEmptyJson(a, b);\n            if (!_.isUndefined(v)) ret[k] = v;\n          }\n        }\n        return _.isEmpty(ret) ? undefined : ret;\n      }\n      return copy;\n    }\n\n    /* Ripping off angular.equals but treating empty array and undefined/null as equal */\n    function equals(a, b) {\n      if (a === b || _.isFalsy(a) && _.isFalsy(b)) return true;\n      var ta = typeof a === 'undefined' ? 'undefined' : _typeof(a),\n          tb = typeof b === 'undefined' ? 'undefined' : _typeof(b),\n          l = undefined,\n          k = undefined,\n          ks = undefined;\n      if (ta === tb && ta === 'object' && _.isObject(a) && _.isObject(b)) {\n        if (_.isArray(a)) {\n          if (!_.isArray(b)) return false;\n          if ((l = a.length) === b.length) {\n            for (k = 0; k < l; k++) {\n              if (!equals(a[k], b[k])) return false;\n            }\n            return true;\n          }\n        } else if (_.isDate(a)) {\n          return _.isDate(b) && equals(a.getTime(), b.getTime());\n        } else if (_.isRegExp(a)) {\n          return _.isRegExp(b) && a.toString() === b.toString();\n        } else {\n          if (_.isArray(b) || _.isDate(b) || _.isRegExp(b)) return false;\n          ks = Object.create(null);\n          for (k in a) {\n            if (k.charAt(0) === '$' || _.isFunction(a[k])) continue;\n            if (!equals(a[k], b[k])) return false;\n            if (!_.isFalsy(a[k])) ks[k] = true;\n          }\n          for (k in b) {\n            if (!(k in ks) && k.charAt(0) !== '$' && !_.isFalsy(b[k]) && !_.isFunction(b[k])) return false;\n          }\n          return true;\n        }\n      }\n      return false;\n    }\n\n    function inheritCommon(from, to) {\n      _.each(to, function (val, key) {\n        if (key in from) {\n          val = from[key];\n          if (_.isObject(val) && !_.isArray(val) && to[key]) {\n            to[key] = inheritCommon(val, to[key]);\n          } else {\n            to[key] = val;\n          }\n        }\n      });\n      return to;\n    }\n\n    function extend(base, sub) {\n      // Avoid instantiating the base class just to setup inheritance\n      // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create\n      // for a polyfill\n      // Also, do a recursive merge of two prototypes, so we don't overwrite\n      // the existing prototype, but still maintain the inheritance chain\n      // Thanks to @ccnokes\n      var ogProto = sub.prototype;\n      sub.prototype = Object.create(base.prototype);\n      _.extend(sub.prototype, ogProto);\n      // Remember the constructor property was set wrong, let's fix it\n      sub.prototype.constructor = sub;\n      // In ECMAScript5+ (all modern browsers), you can make the constructor property\n      // non-enumerable if you define it like this instead\n      Object.defineProperty(sub.prototype, 'constructor', {\n        enumerable: false,\n        value: sub\n      });\n    }\n\n    /**\n     * Used to build an HTML representation of the description keys in the errors array.\n     * See: API call GET /campaigns/:id/subCampaigns/status<\n     *\n     * Sample HTML <p>One error<br/>Another error</p>\n     *\n     * @param errors{array}\n     * @returns {string}\n     */\n    function constructErrorMessageAsHtml(errors) {\n      var errorMessage = '';\n      errors.forEach(function (error) {\n        errorMessage = errorMessage + '<p class=\"cn-error\">' + error.description + '</p>';\n      });\n      return errorMessage;\n    }\n\n    /**\n     * Used to append a popoverHtml key on the objects (campaigns, adSets, ads)\n     * that contains the name and id of the object so it can be show in in the popover\n     *\n     * @param objectsArray\n     * @param nameKey\n     * @param idKey\n     * @returns {*}\n     */\n    function constructPopoverHtml(objectsArray, nameKey, idKey) {\n      objectsArray.forEach(function (object) {\n        object.popoverHtml = '<p class=\"popover-text\">Name: ' + object[nameKey] + '</p>' + '<p class=\"popover-text\">ID: ' + object[idKey] + '</p>';\n      });\n      return objectsArray;\n    }\n  });\n})();","(function() {\n  'use strict';\n\n  /**\n   * Some useful util functions to add to lodash/underscore\n   *\n   * author: dzuch\n   */\n\n  _.mixin({\n    allEqual,\n    empty,\n    add,\n    subtract,\n    multiply,\n    divide,\n    round,\n    floor,\n    ceil,\n    percentage,\n    isFalsy,\n    /* deprecate if upgrading lodash to v4 */\n    nth,\n\n    /* TODO: remove this, not needed and can achieve with lodash\n     * Override lodash's range to allow high to low ranges\n     */\n    range\n  });\n\n  ////////\n\n  function nth(array, n) {\n    if(array && array.length) {\n      let l = array.length;\n      n += n < 0 ? l : 0;\n      if(n > l) return array[n];\n    }\n  }\n\n  function isFalsy(x) {\n    if(!x) return true;\n    if(_.isObject(x)) {\n      if(_.isDate(x) || _.isRegExp(x)) return false;\n      if(_.isEmpty(x)) return true;\n      let falsy = true;\n      for(let k in x) {\n        if(!_.isFalsy(x[k])) falsy = false;\n      }\n      return falsy;\n    }\n    return false;\n  }\n\n  function allEqual(vals) {\n    let first = _.first(vals);\n    if(_.isArray(first) && !_.isObject(_.first(first))) {\n      return _.allEqual(vals.map(v => JSON.stringify(v)));\n    }\n    if(_.isObject(first)) {\n      return _.all(vals, first);\n    }\n    return _.uniq(vals).length === 1;\n  }\n\n  function empty(obj) {\n    if(_.isArray(obj)) {\n      obj.length = 0;\n      return obj;\n    }\n    _.each(obj, function(val, key) {\n      delete obj[key];\n    });\n    return obj;\n  }\n\n  function add(x) {\n    x = _.isArray(x) ? x : [].slice.call(arguments);\n\n    return _.reduce(x, function(a, b) {\n      a = parseFloat(a);\n      b = parseFloat(b);\n      return (Math.round(a * 100) + Math.round(b * 100)) / 100;\n    });\n  }\n\n  function subtract(x) {\n    x = _.isArray(x) ? x : [].slice.call(arguments);\n\n    return _.reduce(x, function(a, b) {\n      a = parseFloat(a);\n      b = parseFloat(b);\n      return (Math.round(a * 100) - Math.round(b * 100)) / 100;\n    });\n  }\n\n  function multiply(x) {\n    x = _.isArray(x) ? x : [].slice.call(arguments);\n\n    return _.reduce(x, function(a, b) {\n      a = parseFloat(a);\n      b = parseFloat(b);\n      return (Math.round(a * 100) * Math.round(b * 100)) / 10000;\n    });\n  }\n\n  function divide(x) {\n    x = _.isArray(x) ? x : [].slice.call(arguments);\n\n    return _.reduce(x, function(a, b) {\n      a = parseFloat(a);\n      b = parseFloat(b);\n      return (Math.round(a * 100) / Math.round(b * 100));\n    });\n  }\n\n  function round(x, p) {\n    p = Math.pow(10, p || 0);\n    return Math.round(parseFloat(x) * p) / p;\n  }\n\n  function floor(x, p) {\n    p = Math.pow(10, p || 0);\n    return Math.floor(parseFloat(x) * p) / p;\n  }\n\n  function ceil(x, p) {\n    p = Math.pow(10, p || 0);\n    return Math.ceil(parseFloat(x) * p) / p;\n  }\n\n  function percentage(a, b, overflow) {\n    var result = _.round(100 * a / b);\n    if(!overflow) {\n      if(result > 100) result = 100;\n      else if(result < 0) result = 0;\n    }\n    return result;\n  }\n\n  function range(start, end) {\n    start = Number(start);\n    end = Number(end);\n    var result = [],\n        dir = (start <= end) ? 1 : -1;\n    //end = end + dir;\n    while(start !== end) {\n      result.push(start);\n      start += dir;\n    }\n    return result;\n  }\n\n})();\n","(function() {\n  'use strict';\n  /**\n   * Definition for the cn.model module\n   */\n  angular.module('cn.util', [])\n      .factory('cnUtil', function() {\n        let removeStretegies = {\n          'delete': (obj, key) => {delete obj[key];},\n          'null': (obj, key) => {obj[key] = null;}\n        };\n\n        window.cnUtil = {\n          cleanModel,\n          cleanModelVal,\n          cleanEmptyJson,\n          diff,\n          getModified,\n          inheritCommon,\n          extend,\n          constructErrorMessageAsHtml,\n          constructPopoverHtml,\n          equals\n        };\n\n        return {\n          cleanModel,\n          cleanModelVal,\n          cleanEmptyJson,\n          diff,\n          getModified,\n          inheritCommon,\n          extend,\n          constructErrorMessageAsHtml,\n          constructPopoverHtml,\n          equals\n        };\n\n        /////////\n\n        function cleanModel(model) {\n          _.each(model, cleanModelVal);\n          return model;\n        }\n\n        function cleanModelVal(modelVal) {\n          // if array,\n          if(_.isArray(modelVal)) {\n            modelVal.forEach(cleanModelVal);\n          }\n          else if(_.isObject(modelVal)) {\n            _.each(modelVal, (val, key) => {\n              if(val === null || val === undefined) delete modelVal[key];\n              else if(_.isArray(val)) val.forEach(cleanModelVal);\n              else if(_.isObject(val)) cleanModelVal(val);\n            });\n          }\n          //return modelVal;\n        }\n\n        function diff(original, current, deep, removeStrategy) {\n          return getModified(original, current, removeStrategy, !deep);\n        }\n\n        function getModified(original, copy, removeStrategy, shallow) {\n          //console.log('getModified:', removeStrategy, shallow);\n          let removeHandler = removeStretegies[removeStrategy] || removeStretegies[null];\n          let eq = shallow ? equals : angular.equals;\n\n          // console.log('copy, original:', shallow, copy, original, eq(original, copy));\n          if(eq(original, copy)) return;\n          if(_.isObject(copy) && !_.isArray(copy)) {\n            let modified = {};\n            _.each(copy, (val, key) => {\n              if(shallow) {\n                if(!eq(val, original[key])) {\n                  modified[key] = cleanEmptyJson(val, original[key]);\n                }\n              }\n              else {\n                let tmp = original[key] ? getModified(original[key], val, removeStrategy) : val;\n                if(tmp !== undefined && !eq(original[key], tmp)) modified[key] = tmp;\n              }\n            });\n            _.each(original, (val, key) => {\n              if(val && (copy[key] === null || copy[key] === undefined)) {\n                removeHandler(modified, key);\n              }\n            });\n            return _.isEmpty(modified) ? undefined : modified;\n          }\n          return copy;\n        }\n\n        function cleanEmptyJson(copy, original) {\n          if(_.isArray(copy)) {\n            return _.map(copy, (x, i) => cleanEmptyJson(x, original ? original[i] : undefined));\n          }\n          if(_.isObject(copy)) {\n            let ret = {}, k, v, a, b;\n            for(k in copy) {\n              a = copy[k];\n              b = _.nth(original, k);\n              if(!_.isFalsy(a) || (a === false && a !== b)) {\n                v = cleanEmptyJson(a, b);\n                if(!_.isUndefined(v)) ret[k] = v;\n              }\n            }\n            return _.isEmpty(ret) ? undefined : ret;\n          }\n          return copy;\n        }\n\n        /* Ripping off angular.equals but treating empty array and undefined/null as equal */\n        function equals(a, b) {\n          if(a === b || (_.isFalsy(a) && _.isFalsy(b))) return true;\n          let ta = typeof a, tb = typeof b, l, k, ks;\n          if(ta === tb && ta === 'object' && _.isObject(a) && _.isObject(b)) {\n            if(_.isArray(a)) {\n              if(!_.isArray(b)) return false;\n              if((l = a.length) === b.length) {\n                for(k = 0; k < l; k++) {\n                  if(!equals(a[k], b[k])) return false;\n                }\n                return true;\n              }\n            }\n            else if(_.isDate(a)) {\n              return _.isDate(b) && equals(a.getTime(), b.getTime());\n            }\n            else if(_.isRegExp(a)) {\n              return _.isRegExp(b) && a.toString() === b.toString();\n            }\n            else {\n              if(_.isArray(b) || _.isDate(b) || _.isRegExp(b)) return false;\n              ks = Object.create(null);\n              for(k in a) {\n                if(k.charAt(0) === '$' || _.isFunction(a[k])) continue;\n                if(!equals(a[k], b[k])) return false;\n                if(!_.isFalsy(a[k])) ks[k] = true;\n              }\n              for(k in b) {\n                if(!(k in ks) &&\n                    k.charAt(0) !== '$' &&\n                    !_.isFalsy(b[k]) &&\n                    !_.isFunction(b[k])) return false;\n              }\n              return true;\n            }\n          }\n          return false;\n        }\n\n        function inheritCommon(from, to) {\n          _.each(to, function(val, key) {\n            if(key in from) {\n              val = from[key];\n              if(_.isObject(val) && !_.isArray(val) && to[key]) {\n                to[key] = inheritCommon(val, to[key]);\n              }\n              else {\n                to[key] = val;\n              }\n            }\n          });\n          return to;\n        }\n\n        function extend(base, sub) {\n          // Avoid instantiating the base class just to setup inheritance\n          // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create\n          // for a polyfill\n          // Also, do a recursive merge of two prototypes, so we don't overwrite\n          // the existing prototype, but still maintain the inheritance chain\n          // Thanks to @ccnokes\n          var ogProto = sub.prototype;\n          sub.prototype = Object.create(base.prototype);\n          _.extend(sub.prototype, ogProto);\n          // Remember the constructor property was set wrong, let's fix it\n          sub.prototype.constructor = sub;\n          // In ECMAScript5+ (all modern browsers), you can make the constructor property\n          // non-enumerable if you define it like this instead\n          Object.defineProperty(sub.prototype, 'constructor', {\n            enumerable: false,\n            value: sub\n          });\n        }\n\n        /**\n         * Used to build an HTML representation of the description keys in the errors array.\n         * See: API call GET /campaigns/:id/subCampaigns/status<\n         *\n         * Sample HTML <p>One error<br/>Another error</p>\n         *\n         * @param errors{array}\n         * @returns {string}\n         */\n        function constructErrorMessageAsHtml(errors) {\n          var errorMessage = '';\n          errors.forEach(function(error) {\n            errorMessage = errorMessage + '<p class=\"cn-error\">' + error.description + '</p>';\n          });\n          return errorMessage;\n        }\n\n        /**\n         * Used to append a popoverHtml key on the objects (campaigns, adSets, ads)\n         * that contains the name and id of the object so it can be show in in the popover\n         *\n         * @param objectsArray\n         * @param nameKey\n         * @param idKey\n         * @returns {*}\n         */\n        function constructPopoverHtml(objectsArray, nameKey, idKey) {\n          objectsArray.forEach(function(object) {\n            object.popoverHtml = '<p class=\"popover-text\">Name: ' + object[nameKey] + '</p>' + '<p class=\"popover-text\">ID: ' + object[idKey] + '</p>';\n          });\n          return objectsArray;\n        }\n      });\n})();\n"],"sourceRoot":"/source/"}