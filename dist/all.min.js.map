{"version":3,"sources":["all.min.js","_.mixins.js","cn-util.js"],"names":["nth","array","n","length","l","isFalsy","x","_","isObject","isDate","isRegExp","isEmpty","falsy","k","isTrulyEmpty","undefined","allEqual","vals","first","isArray","map","v","JSON","stringify","all","uniq","empty","obj","each","val","key","add","slice","call","arguments","reduce","a","b","parseFloat","Math","round","subtract","multiply","divide","p","pow","floor","ceil","percentage","overflow","result","range","start","end","Number","dir","push","titleCase","str","flow","words","partial","capitalize","w","join","mixin","_typeof","Symbol","iterator","constructor","prototype","angular","module","factory","buildParams","_len","params","Array","_key","reduceRight","prev","cur","assign","isString","toJson","buildSref","state","_len2","_key2","cleanModel","model","cleanModelVal","modelVal","forEach","diff","original","current","deep","removeStrategy","getModified","copy","shallow","removeHandler","removeStretegies","eq","equals","modified","cleanEmptyJson","tmp","i","ret","isUndefined","ta","tb","ks","getTime","toString","Object","create","charAt","isFunction","inheritCommon","from","to","extend","base","sub","ogProto","defineProperty","enumerable","value","constructErrorMessageAsHtml","errors","errorMessage","error","description","constructPopoverHtml","objectsArray","nameKey","idKey","object","popoverHtml","delete","null"],"mappings":"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","file":"all.min.js","sourcesContent":["\"use strict\";\n\n(function () {\n  'use strict';\n\n  /**\n   * Some useful util functions to add to lodash/underscore\n   *\n   * author: dzuch\n   */\n\n  _.mixin({\n    allEqual: allEqual,\n    empty: empty,\n    add: add,\n    subtract: subtract,\n    multiply: multiply,\n    divide: divide,\n    round: round,\n    floor: floor,\n    ceil: ceil,\n    percentage: percentage,\n    isFalsy: isFalsy,\n    isTrulyEmpty: isTrulyEmpty,\n    /* deprecate if upgrading lodash to v4 */\n    nth: nth,\n\n    /* TODO: remove this, not needed and can achieve with lodash\n     * Override lodash's range to allow high to low ranges\n     */\n    range: range,\n    titleCase: titleCase\n  });\n\n  ////////\n\n  function nth(array, n) {\n    if (array && array.length) {\n      var l = array.length;\n      n += n < 0 ? l : 0;\n      if (n > l) return array[n];\n    }\n  }\n\n  function isFalsy(x) {\n    if (!x) return true;\n    if (_.isObject(x)) {\n      if (_.isDate(x) || _.isRegExp(x)) return false;\n      if (_.isEmpty(x)) return true;\n      var falsy = true;\n      for (var k in x) {\n        if (!_.isFalsy(x[k])) falsy = false;\n      }\n      return falsy;\n    }\n    return false;\n  }\n\n  function isTrulyEmpty(x) {\n    return x === undefined || _.isObject(x) && _.isEmpty(x);\n  }\n\n  function allEqual(vals) {\n    var first = _.first(vals);\n    if (_.isArray(first) && !_.isObject(_.first(first))) {\n      return _.allEqual(vals.map(function (v) {\n        return JSON.stringify(v);\n      }));\n    }\n    if (_.isObject(first)) {\n      return _.all(vals, first);\n    }\n    return _.uniq(vals).length === 1;\n  }\n\n  function empty(obj) {\n    if (_.isArray(obj)) {\n      obj.length = 0;\n      return obj;\n    }\n    _.each(obj, function (val, key) {\n      delete obj[key];\n    });\n    return obj;\n  }\n\n  function add(x) {\n    x = _.isArray(x) ? x : [].slice.call(arguments);\n\n    return _.reduce(x, function (a, b) {\n      a = parseFloat(a);\n      b = parseFloat(b);\n      return (Math.round(a * 100) + Math.round(b * 100)) / 100;\n    });\n  }\n\n  function subtract(x) {\n    x = _.isArray(x) ? x : [].slice.call(arguments);\n\n    return _.reduce(x, function (a, b) {\n      a = parseFloat(a);\n      b = parseFloat(b);\n      return (Math.round(a * 100) - Math.round(b * 100)) / 100;\n    });\n  }\n\n  function multiply(x) {\n    x = _.isArray(x) ? x : [].slice.call(arguments);\n\n    return _.reduce(x, function (a, b) {\n      a = parseFloat(a);\n      b = parseFloat(b);\n      return Math.round(a * 100) * Math.round(b * 100) / 10000;\n    });\n  }\n\n  function divide(x) {\n    x = _.isArray(x) ? x : [].slice.call(arguments);\n\n    return _.reduce(x, function (a, b) {\n      a = parseFloat(a);\n      b = parseFloat(b);\n      return Math.round(a * 100) / Math.round(b * 100);\n    });\n  }\n\n  function round(x, p) {\n    p = Math.pow(10, p || 0);\n    return Math.round(parseFloat(x) * p) / p;\n  }\n\n  function floor(x, p) {\n    p = Math.pow(10, p || 0);\n    return Math.floor(parseFloat(x) * p) / p;\n  }\n\n  function ceil(x, p) {\n    p = Math.pow(10, p || 0);\n    return Math.ceil(parseFloat(x) * p) / p;\n  }\n\n  function percentage(a, b, overflow) {\n    var result = _.round(100 * a / b);\n    if (!overflow) {\n      if (result > 100) result = 100;else if (result < 0) result = 0;\n    }\n    return result;\n  }\n\n  function range(start, end) {\n    start = Number(start);\n    end = Number(end);\n    var result = [],\n        dir = start <= end ? 1 : -1;\n    //end = end + dir;\n    while (start !== end) {\n      result.push(start);\n      start += dir;\n    }\n    return result;\n  }\n\n  function titleCase(str) {\n    return _.flow(_.words, _.partial(_.map, _, _.capitalize), function (w) {\n      return w.join(\" \");\n    })(str);\n  }\n})();\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n(function () {\n  'use strict';\n  /**\n   * Definition for the cn.model module\n   */\n\n  angular.module('cn.util', []).factory('cnUtil', function () {\n    var removeStretegies = {\n      'delete': function _delete(obj, key) {\n        delete obj[key];\n      },\n      'null': function _null(obj, key) {\n        obj[key] = null;\n      }\n    };\n\n    return {\n      buildParams: buildParams,\n      buildSref: buildSref,\n      cleanModel: cleanModel,\n      cleanModelVal: cleanModelVal,\n      cleanEmptyJson: cleanEmptyJson,\n      diff: diff,\n      getModified: getModified,\n      inheritCommon: inheritCommon,\n      extend: extend,\n      constructErrorMessageAsHtml: constructErrorMessageAsHtml,\n      constructPopoverHtml: constructPopoverHtml,\n      equals: equals\n    };\n\n    /////////\n\n    function buildParams() {\n      for (var _len = arguments.length, params = Array(_len), _key = 0; _key < _len; _key++) {\n        params[_key] = arguments[_key];\n      }\n\n      if (!params[0]) return '';\n      if (_.isArray(params[0])) params = params[0];\n\n      if (params.length > 1) {\n        params = params.reduceRight(function (prev, cur) {\n          return _.assign(prev, cur);\n        }, {});\n      } else params = params[0];\n      return _.isString(params) ? params : angular.toJson(params);\n    }\n\n    function buildSref(state) {\n      for (var _len2 = arguments.length, params = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        params[_key2 - 1] = arguments[_key2];\n      }\n\n      return state + '(' + buildParams.apply(undefined, params) + ')';\n    }\n\n    function cleanModel(model) {\n      _.each(model, cleanModelVal);\n      return model;\n    }\n\n    function cleanModelVal(modelVal) {\n      // if array,\n      if (_.isArray(modelVal)) {\n        modelVal.forEach(cleanModelVal);\n      } else if (_.isObject(modelVal)) {\n        _.each(modelVal, function (val, key) {\n          if (val === null || val === undefined) delete modelVal[key];else if (_.isArray(val)) val.forEach(cleanModelVal);else if (_.isObject(val)) cleanModelVal(val);\n        });\n      }\n    }\n\n    function diff(original, current, deep, removeStrategy) {\n      return getModified(original, current, removeStrategy, !deep);\n    }\n\n    function getModified(original, copy, removeStrategy, shallow) {\n      var removeHandler = removeStretegies[removeStrategy] || removeStretegies[null];\n      var eq = shallow ? equals : angular.equals;\n\n      if (eq(original, copy)) return;\n      if (_.isObject(copy) && !_.isArray(copy)) {\n        var modified = {};\n        _.each(copy, function (val, key) {\n          if (shallow) {\n            if (!eq(val, original[key])) {\n              modified[key] = cleanEmptyJson(val, original[key]);\n            }\n          } else {\n            var tmp = original[key] ? getModified(original[key], val, removeStrategy) : val;\n            if (tmp !== undefined && !eq(original[key], tmp)) modified[key] = tmp;\n          }\n        });\n        _.each(original, function (val, key) {\n          if (val && (copy[key] === null || copy[key] === undefined)) {\n            removeHandler(modified, key);\n          }\n        });\n        return _.isEmpty(modified) ? undefined : modified;\n      }\n      return copy;\n    }\n\n    function cleanEmptyJson(copy, original) {\n      if (_.isArray(copy)) {\n        return _.map(copy, function (x, i) {\n          return cleanEmptyJson(x, original ? original[i] : undefined);\n        });\n      }\n      if (_.isObject(copy)) {\n        var ret = {},\n            k = void 0,\n            v = void 0,\n            a = void 0,\n            b = void 0;\n        for (k in copy) {\n          a = copy[k];\n          b = _.nth(original, k);\n          if (!_.isFalsy(a) || a === false && a !== b) {\n            v = cleanEmptyJson(a, b);\n            if (!_.isUndefined(v)) ret[k] = v;\n          }\n        }\n        return _.isEmpty(ret) ? undefined : ret;\n      }\n      return copy;\n    }\n\n    /* Ripping off angular.equals but treating empty array and undefined/null as equal */\n    function equals(a, b) {\n      if (a === b || _.isFalsy(a) && _.isFalsy(b)) return true;\n      var ta = typeof a === 'undefined' ? 'undefined' : _typeof(a),\n          tb = typeof b === 'undefined' ? 'undefined' : _typeof(b),\n          l = void 0,\n          k = void 0,\n          ks = void 0;\n      if (ta === tb && ta === 'object' && _.isObject(a) && _.isObject(b)) {\n        if (_.isArray(a)) {\n          if (!_.isArray(b)) return false;\n          if ((l = a.length) === b.length) {\n            for (k = 0; k < l; k++) {\n              if (!equals(a[k], b[k])) return false;\n            }\n            return true;\n          }\n        } else if (_.isDate(a)) {\n          return _.isDate(b) && equals(a.getTime(), b.getTime());\n        } else if (_.isRegExp(a)) {\n          return _.isRegExp(b) && a.toString() === b.toString();\n        } else {\n          if (_.isArray(b) || _.isDate(b) || _.isRegExp(b)) return false;\n          ks = Object.create(null);\n          for (k in a) {\n            if (k.charAt(0) === '$' || _.isFunction(a[k])) continue;\n            if (!equals(a[k], b[k])) return false;\n            if (!_.isFalsy(a[k])) ks[k] = true;\n          }\n          for (k in b) {\n            if (!(k in ks) && k.charAt(0) !== '$' && !_.isFalsy(b[k]) && !_.isFunction(b[k])) return false;\n          }\n          return true;\n        }\n      }\n      return false;\n    }\n\n    function inheritCommon(from, to) {\n      _.each(to, function (val, key) {\n        if (key in from) {\n          val = from[key];\n          if (_.isObject(val) && !_.isArray(val) && to[key]) {\n            to[key] = inheritCommon(val, to[key]);\n          } else {\n            to[key] = val;\n          }\n        }\n      });\n      return to;\n    }\n\n    function extend(base, sub) {\n      // Avoid instantiating the base class just to setup inheritance\n      // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create\n      // for a polyfill\n      // Also, do a recursive merge of two prototypes, so we don't overwrite\n      // the existing prototype, but still maintain the inheritance chain\n      // Thanks to @ccnokes\n      var ogProto = sub.prototype;\n      sub.prototype = Object.create(base.prototype);\n      _.extend(sub.prototype, ogProto);\n      // Remember the constructor property was set wrong, let's fix it\n      sub.prototype.constructor = sub;\n      // In ECMAScript5+ (all modern browsers), you can make the constructor property\n      // non-enumerable if you define it like this instead\n      Object.defineProperty(sub.prototype, 'constructor', {\n        enumerable: false,\n        value: sub\n      });\n    }\n\n    /**\n     * Used to build an HTML representation of the description keys in the errors array.\n     * See: API call GET /campaigns/:id/subCampaigns/status<\n     *\n     * Sample HTML <p>One error<br/>Another error</p>\n     *\n     * @param errors{array}\n     * @returns {string}\n     */\n    function constructErrorMessageAsHtml(errors) {\n      var errorMessage = '';\n      errors.forEach(function (error) {\n        errorMessage = errorMessage + '<p class=\"cn-error\">' + error.description + '</p>';\n      });\n      return errorMessage;\n    }\n\n    /**\n     * Used to append a popoverHtml key on the objects (campaigns, adSets, ads)\n     * that contains the name and id of the object so it can be show in in the popover\n     *\n     * @param objectsArray\n     * @param nameKey\n     * @param idKey\n     * @returns {*}\n     */\n    function constructPopoverHtml(objectsArray, nameKey, idKey) {\n      objectsArray.forEach(function (object) {\n        object.popoverHtml = '<p class=\"popover-text\">Name: ' + object[nameKey] + '</p>' + '<p class=\"popover-text\">ID: ' + object[idKey] + '</p>';\n      });\n      return objectsArray;\n    }\n  });\n})();","(function() {\n  'use strict';\n\n  /**\n   * Some useful util functions to add to lodash/underscore\n   *\n   * author: dzuch\n   */\n\n  _.mixin({\n    allEqual,\n    empty,\n    add,\n    subtract,\n    multiply,\n    divide,\n    round,\n    floor,\n    ceil,\n    percentage,\n    isFalsy,\n    isTrulyEmpty,\n    /* deprecate if upgrading lodash to v4 */\n    nth,\n\n    /* TODO: remove this, not needed and can achieve with lodash\n     * Override lodash's range to allow high to low ranges\n     */\n    range,\n    titleCase\n  });\n\n  ////////\n\n  function nth(array, n) {\n    if(array && array.length) {\n      let l = array.length;\n      n += n < 0 ? l : 0;\n      if(n > l) return array[n];\n    }\n  }\n\n  function isFalsy(x) {\n    if(!x) return true;\n    if(_.isObject(x)) {\n      if(_.isDate(x) || _.isRegExp(x)) return false;\n      if(_.isEmpty(x)) return true;\n      let falsy = true;\n      for(let k in x) {\n        if(!_.isFalsy(x[k])) falsy = false;\n      }\n      return falsy;\n    }\n    return false;\n  }\n\n  function isTrulyEmpty(x) {\n    return x === undefined || _.isObject(x) && _.isEmpty(x);\n  }\n\n  function allEqual(vals) {\n    let first = _.first(vals);\n    if(_.isArray(first) && !_.isObject(_.first(first))) {\n      return _.allEqual(vals.map(v => JSON.stringify(v)));\n    }\n    if(_.isObject(first)) {\n      return _.all(vals, first);\n    }\n    return _.uniq(vals).length === 1;\n  }\n\n  function empty(obj) {\n    if(_.isArray(obj)) {\n      obj.length = 0;\n      return obj;\n    }\n    _.each(obj, function(val, key) {\n      delete obj[key];\n    });\n    return obj;\n  }\n\n  function add(x) {\n    x = _.isArray(x) ? x : [].slice.call(arguments);\n\n    return _.reduce(x, function(a, b) {\n      a = parseFloat(a);\n      b = parseFloat(b);\n      return (Math.round(a * 100) + Math.round(b * 100)) / 100;\n    });\n  }\n\n  function subtract(x) {\n    x = _.isArray(x) ? x : [].slice.call(arguments);\n\n    return _.reduce(x, function(a, b) {\n      a = parseFloat(a);\n      b = parseFloat(b);\n      return (Math.round(a * 100) - Math.round(b * 100)) / 100;\n    });\n  }\n\n  function multiply(x) {\n    x = _.isArray(x) ? x : [].slice.call(arguments);\n\n    return _.reduce(x, function(a, b) {\n      a = parseFloat(a);\n      b = parseFloat(b);\n      return (Math.round(a * 100) * Math.round(b * 100)) / 10000;\n    });\n  }\n\n  function divide(x) {\n    x = _.isArray(x) ? x : [].slice.call(arguments);\n\n    return _.reduce(x, function(a, b) {\n      a = parseFloat(a);\n      b = parseFloat(b);\n      return (Math.round(a * 100) / Math.round(b * 100));\n    });\n  }\n\n  function round(x, p) {\n    p = Math.pow(10, p || 0);\n    return Math.round(parseFloat(x) * p) / p;\n  }\n\n  function floor(x, p) {\n    p = Math.pow(10, p || 0);\n    return Math.floor(parseFloat(x) * p) / p;\n  }\n\n  function ceil(x, p) {\n    p = Math.pow(10, p || 0);\n    return Math.ceil(parseFloat(x) * p) / p;\n  }\n\n  function percentage(a, b, overflow) {\n    var result = _.round(100 * a / b);\n    if(!overflow) {\n      if(result > 100) result = 100;\n      else if(result < 0) result = 0;\n    }\n    return result;\n  }\n\n  function range(start, end) {\n    start = Number(start);\n    end = Number(end);\n    var result = [],\n        dir = (start <= end) ? 1 : -1;\n    //end = end + dir;\n    while(start !== end) {\n      result.push(start);\n      start += dir;\n    }\n    return result;\n  }\n\n  function titleCase(str) {\n    return _.flow(\n      _.words,\n      _.partial(_.map, _, _.capitalize),\n      w => w.join(\" \")\n    )(str);\n  }\n\n})();\n","(function() {\n  'use strict';\n  /**\n   * Definition for the cn.model module\n   */\n  angular.module('cn.util', [])\n      .factory('cnUtil', function() {\n        let removeStretegies = {\n          'delete': (obj, key) => {delete obj[key];},\n          'null': (obj, key) => {obj[key] = null;}\n        };\n\n        return {\n          buildParams,\n          buildSref,\n          cleanModel,\n          cleanModelVal,\n          cleanEmptyJson,\n          diff,\n          getModified,\n          inheritCommon,\n          extend,\n          constructErrorMessageAsHtml,\n          constructPopoverHtml,\n          equals\n        };\n\n        /////////\n\n        function buildParams(...params) {\n          if(!params[0]) return '';\n          if(_.isArray(params[0])) params = params[0];\n\n          if(params.length > 1) {\n            params = params.reduceRight((prev, cur) => _.assign(prev, cur), {});\n          }\n          else params = params[0];\n          return _.isString(params) ? params : angular.toJson(params);\n        }\n\n        function buildSref(state, ...params) {\n          return `${state}(${buildParams(...params)})`;\n        }\n\n        function cleanModel(model) {\n          _.each(model, cleanModelVal);\n          return model;\n        }\n\n        function cleanModelVal(modelVal) {\n          // if array,\n          if(_.isArray(modelVal)) {\n            modelVal.forEach(cleanModelVal);\n          }\n          else if(_.isObject(modelVal)) {\n            _.each(modelVal, (val, key) => {\n              if(val === null || val === undefined) delete modelVal[key];\n              else if(_.isArray(val)) val.forEach(cleanModelVal);\n              else if(_.isObject(val)) cleanModelVal(val);\n            });\n          }\n        }\n\n        function diff(original, current, deep, removeStrategy) {\n          return getModified(original, current, removeStrategy, !deep);\n        }\n\n        function getModified(original, copy, removeStrategy, shallow) {\n          let removeHandler = removeStretegies[removeStrategy] || removeStretegies[null];\n          let eq = shallow ? equals : angular.equals;\n\n          if(eq(original, copy)) return;\n          if(_.isObject(copy) && !_.isArray(copy)) {\n            let modified = {};\n            _.each(copy, (val, key) => {\n              if(shallow) {\n                if(!eq(val, original[key])) {\n                  modified[key] = cleanEmptyJson(val, original[key]);\n                }\n              }\n              else {\n                let tmp = original[key] ? getModified(original[key], val, removeStrategy) : val;\n                if(tmp !== undefined && !eq(original[key], tmp)) modified[key] = tmp;\n              }\n            });\n            _.each(original, (val, key) => {\n              if(val && (copy[key] === null || copy[key] === undefined)) {\n                removeHandler(modified, key);\n              }\n            });\n            return _.isEmpty(modified) ? undefined : modified;\n          }\n          return copy;\n        }\n\n        function cleanEmptyJson(copy, original) {\n          if(_.isArray(copy)) {\n            return _.map(copy, (x, i) => cleanEmptyJson(x, original ? original[i] : undefined));\n          }\n          if(_.isObject(copy)) {\n            let ret = {}, k, v, a, b;\n            for(k in copy) {\n              a = copy[k];\n              b = _.nth(original, k);\n              if(!_.isFalsy(a) || (a === false && a !== b)) {\n                v = cleanEmptyJson(a, b);\n                if(!_.isUndefined(v)) ret[k] = v;\n              }\n            }\n            return _.isEmpty(ret) ? undefined : ret;\n          }\n          return copy;\n        }\n\n        /* Ripping off angular.equals but treating empty array and undefined/null as equal */\n        function equals(a, b) {\n          if(a === b || (_.isFalsy(a) && _.isFalsy(b))) return true;\n          let ta = typeof a, tb = typeof b, l, k, ks;\n          if(ta === tb && ta === 'object' && _.isObject(a) && _.isObject(b)) {\n            if(_.isArray(a)) {\n              if(!_.isArray(b)) return false;\n              if((l = a.length) === b.length) {\n                for(k = 0; k < l; k++) {\n                  if(!equals(a[k], b[k])) return false;\n                }\n                return true;\n              }\n            }\n            else if(_.isDate(a)) {\n              return _.isDate(b) && equals(a.getTime(), b.getTime());\n            }\n            else if(_.isRegExp(a)) {\n              return _.isRegExp(b) && a.toString() === b.toString();\n            }\n            else {\n              if(_.isArray(b) || _.isDate(b) || _.isRegExp(b)) return false;\n              ks = Object.create(null);\n              for(k in a) {\n                if(k.charAt(0) === '$' || _.isFunction(a[k])) continue;\n                if(!equals(a[k], b[k])) return false;\n                if(!_.isFalsy(a[k])) ks[k] = true;\n              }\n              for(k in b) {\n                if(!(k in ks) &&\n                    k.charAt(0) !== '$' &&\n                    !_.isFalsy(b[k]) &&\n                    !_.isFunction(b[k])) return false;\n              }\n              return true;\n            }\n          }\n          return false;\n        }\n\n        function inheritCommon(from, to) {\n          _.each(to, function(val, key) {\n            if(key in from) {\n              val = from[key];\n              if(_.isObject(val) && !_.isArray(val) && to[key]) {\n                to[key] = inheritCommon(val, to[key]);\n              }\n              else {\n                to[key] = val;\n              }\n            }\n          });\n          return to;\n        }\n\n        function extend(base, sub) {\n          // Avoid instantiating the base class just to setup inheritance\n          // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create\n          // for a polyfill\n          // Also, do a recursive merge of two prototypes, so we don't overwrite\n          // the existing prototype, but still maintain the inheritance chain\n          // Thanks to @ccnokes\n          var ogProto = sub.prototype;\n          sub.prototype = Object.create(base.prototype);\n          _.extend(sub.prototype, ogProto);\n          // Remember the constructor property was set wrong, let's fix it\n          sub.prototype.constructor = sub;\n          // In ECMAScript5+ (all modern browsers), you can make the constructor property\n          // non-enumerable if you define it like this instead\n          Object.defineProperty(sub.prototype, 'constructor', {\n            enumerable: false,\n            value: sub\n          });\n        }\n\n        /**\n         * Used to build an HTML representation of the description keys in the errors array.\n         * See: API call GET /campaigns/:id/subCampaigns/status<\n         *\n         * Sample HTML <p>One error<br/>Another error</p>\n         *\n         * @param errors{array}\n         * @returns {string}\n         */\n        function constructErrorMessageAsHtml(errors) {\n          var errorMessage = '';\n          errors.forEach(function(error) {\n            errorMessage = errorMessage + '<p class=\"cn-error\">' + error.description + '</p>';\n          });\n          return errorMessage;\n        }\n\n        /**\n         * Used to append a popoverHtml key on the objects (campaigns, adSets, ads)\n         * that contains the name and id of the object so it can be show in in the popover\n         *\n         * @param objectsArray\n         * @param nameKey\n         * @param idKey\n         * @returns {*}\n         */\n        function constructPopoverHtml(objectsArray, nameKey, idKey) {\n          objectsArray.forEach(function(object) {\n            object.popoverHtml = '<p class=\"popover-text\">Name: ' + object[nameKey] + '</p>' + '<p class=\"popover-text\">ID: ' + object[idKey] + '</p>';\n          });\n          return objectsArray;\n        }\n      });\n})();\n"]}