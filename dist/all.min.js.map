{"version":3,"sources":["all.min.js","_.mixins.js","cn-util.js"],"names":["nth","array","n","length","l","isFalsy","x","_","isObject","isDate","isRegExp","isEmpty","every","isTrulyEmpty","_len","arguments","emptyVals","Array","_key","undefined","some","v","y","_ref","apply","concat","allEqual","vals","first","isArray","map","JSON","stringify","matches","uniq","empty","obj","each","val","key","add","slice","call","reduce","a","b","parseFloat","Math","round","subtract","multiply","divide","p","pow","floor","ceil","percentage","overflow","result","range","start","end","Number","dir","push","titleCase","str","flow","words","partial","capitalize","w","join","mixin","_typeof","Symbol","iterator","constructor","prototype","angular","module","factory","buildParams","params","reduceRight","prev","cur","assign","isString","toJson","buildSref","state","_len2","_key2","cleanModel","model","cleanModelVal","modelVal","forEach","diff","original","current","deep","removeStrategy","getModified","copy","shallow","removeHandler","removeStretegies","eq","equals","modified","cleanEmptyJson","tmp","i","ret","k","get","isUndefined","undefinedAndFalsy","ta","tb","ks","getTime","toString","Object","create","charAt","isFunction","inheritCommon","from","to","extend","base","sub","ogProto","defineProperty","enumerable","value","constructErrorMessageAsHtml","errors","errorMessage","error","description","constructPopoverHtml","objectsArray","nameKey","idKey","object","popoverHtml","delete","null"],"mappings":"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","file":"all.min.js","sourcesContent":["\"use strict\";\n\n(function () {\n  'use strict';\n\n  /**\n   * Some useful util functions to add to lodash/underscore\n   *\n   * author: dzuch\n   */\n\n  _.mixin({\n    allEqual: allEqual,\n    empty: empty,\n    add: add,\n    subtract: subtract,\n    multiply: multiply,\n    divide: divide,\n    round: round,\n    floor: floor,\n    ceil: ceil,\n    percentage: percentage,\n    isFalsy: isFalsy,\n    isTrulyEmpty: isTrulyEmpty,\n    /* deprecate if upgrading lodash to v4 */\n    nth: nth,\n\n    /* TODO: remove this, not needed and can achieve with lodash\n     * Override lodash's range to allow high to low ranges\n     */\n    range: range,\n    titleCase: titleCase\n  });\n\n  ////////\n\n  function nth(array, n) {\n    if (array && array.length) {\n      var l = array.length;\n      n += n < 0 ? l : 0;\n      if (n > l) return array[n];\n    }\n  }\n\n  function isFalsy(x) {\n    if (!x) return true;\n    if (_.isObject(x)) {\n      if (_.isDate(x) || _.isRegExp(x)) return false;\n      if (_.isEmpty(x)) return true;\n      return _.every(x, _.isFalsy);\n    }\n    return false;\n  }\n\n  function isTrulyEmpty(x) {\n    for (var _len = arguments.length, emptyVals = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      emptyVals[_key - 1] = arguments[_key];\n    }\n\n    return x === undefined || _.some(emptyVals, function (v) {\n      return x === v;\n    }) || _.isObject(x) && !x.length && _.every(x, function (y) {\n      var _ref;\n\n      return (_ref = _).isTrulyEmpty.apply(_ref, [y].concat(emptyVals));\n    });\n  }\n\n  function allEqual(vals) {\n    var first = _.first(vals);\n    if (_.isArray(first) && !_.isObject(_.first(first))) {\n      return _.allEqual(vals.map(function (v) {\n        return JSON.stringify(v);\n      }));\n    }\n    if (_.isObject(first)) {\n      return _.every(vals, _.matches(first));\n    }\n    return _.uniq(vals).length === 1;\n  }\n\n  function empty(obj) {\n    if (_.isArray(obj)) {\n      obj.length = 0;\n      return obj;\n    }\n    _.each(obj, function (val, key) {\n      delete obj[key];\n    });\n    return obj;\n  }\n\n  function add(x) {\n    x = _.isArray(x) ? x : [].slice.call(arguments);\n\n    return _.reduce(x, function (a, b) {\n      a = parseFloat(a);\n      b = parseFloat(b);\n      return (Math.round(a * 100) + Math.round(b * 100)) / 100;\n    });\n  }\n\n  function subtract(x) {\n    x = _.isArray(x) ? x : [].slice.call(arguments);\n\n    return _.reduce(x, function (a, b) {\n      a = parseFloat(a);\n      b = parseFloat(b);\n      return (Math.round(a * 100) - Math.round(b * 100)) / 100;\n    });\n  }\n\n  function multiply(x) {\n    x = _.isArray(x) ? x : [].slice.call(arguments);\n\n    return _.reduce(x, function (a, b) {\n      a = parseFloat(a);\n      b = parseFloat(b);\n      return Math.round(a * 100) * Math.round(b * 100) / 10000;\n    });\n  }\n\n  function divide(x) {\n    x = _.isArray(x) ? x : [].slice.call(arguments);\n\n    return _.reduce(x, function (a, b) {\n      a = parseFloat(a);\n      b = parseFloat(b);\n      return Math.round(a * 100) / Math.round(b * 100);\n    });\n  }\n\n  function round(x, p) {\n    p = Math.pow(10, p || 0);\n    return Math.round(parseFloat(x) * p) / p;\n  }\n\n  function floor(x, p) {\n    p = Math.pow(10, p || 0);\n    return Math.floor(parseFloat(x) * p) / p;\n  }\n\n  function ceil(x, p) {\n    p = Math.pow(10, p || 0);\n    return Math.ceil(parseFloat(x) * p) / p;\n  }\n\n  function percentage(a, b, overflow) {\n    var result = _.round(100 * a / b);\n    if (!overflow) {\n      if (result > 100) result = 100;else if (result < 0) result = 0;\n    }\n    return result;\n  }\n\n  function range(start, end) {\n    start = Number(start);\n    end = Number(end);\n    var result = [],\n        dir = start <= end ? 1 : -1;\n    //end = end + dir;\n    while (start !== end) {\n      result.push(start);\n      start += dir;\n    }\n    return result;\n  }\n\n  function titleCase(str) {\n    return _.flow(_.words, _.partial(_.map, _, _.capitalize), function (w) {\n      return w.join(\" \");\n    })(str);\n  }\n})();\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n(function () {\n  'use strict';\n  /**\n   * Definition for the cn.model module\n   */\n\n  angular.module('cn.util', []).factory('cnUtil', function () {\n    var removeStretegies = {\n      'delete': function _delete(obj, key) {\n        delete obj[key];\n      },\n      'null': function _null(obj, key) {\n        obj[key] = null;\n      }\n    };\n\n    return {\n      buildParams: buildParams,\n      buildSref: buildSref,\n      cleanModel: cleanModel,\n      cleanModelVal: cleanModelVal,\n      cleanEmptyJson: cleanEmptyJson,\n      diff: diff,\n      getModified: getModified,\n      inheritCommon: inheritCommon,\n      extend: extend,\n      constructErrorMessageAsHtml: constructErrorMessageAsHtml,\n      constructPopoverHtml: constructPopoverHtml,\n      equals: equals\n    };\n\n    /////////\n\n    function buildParams() {\n      for (var _len = arguments.length, params = Array(_len), _key = 0; _key < _len; _key++) {\n        params[_key] = arguments[_key];\n      }\n\n      if (!params[0]) return '';\n      if (_.isArray(params[0])) params = params[0];\n\n      if (params.length > 1) {\n        params = params.reduceRight(function (prev, cur) {\n          return _.assign(prev, cur);\n        }, {});\n      } else params = params[0];\n      return _.isString(params) ? params : angular.toJson(params);\n    }\n\n    function buildSref(state) {\n      for (var _len2 = arguments.length, params = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        params[_key2 - 1] = arguments[_key2];\n      }\n\n      return state + '(' + buildParams.apply(undefined, params) + ')';\n    }\n\n    function cleanModel(model) {\n      _.each(model, cleanModelVal);\n      return model;\n    }\n\n    function cleanModelVal(modelVal) {\n      // if array,\n      if (_.isArray(modelVal)) {\n        modelVal.forEach(cleanModelVal);\n      } else if (_.isObject(modelVal)) {\n        _.each(modelVal, function (val, key) {\n          if (val === null || val === undefined) delete modelVal[key];else if (_.isArray(val)) val.forEach(cleanModelVal);else if (_.isObject(val)) cleanModelVal(val);\n        });\n      }\n    }\n\n    function diff(original, current, deep, removeStrategy) {\n      return getModified(original, current, removeStrategy, !deep);\n    }\n\n    function getModified(original, copy, removeStrategy, shallow) {\n      var removeHandler = removeStretegies[removeStrategy] || removeStretegies[null];\n      var eq = shallow ? equals : angular.equals;\n\n      if (eq(original, copy)) return;\n      if (_.isObject(copy) && !_.isArray(copy)) {\n        var modified = {};\n        _.each(copy, function (val, key) {\n          if (shallow) {\n            if (!eq(val, original[key])) {\n              modified[key] = cleanEmptyJson(val, original[key]);\n            }\n          } else {\n            var tmp = original[key] ? getModified(original[key], val, removeStrategy) : val;\n            if (tmp !== undefined && !eq(original[key], tmp)) modified[key] = tmp;\n          }\n        });\n        _.each(original, function (val, key) {\n          if (val && (copy[key] === null || copy[key] === undefined)) {\n            removeHandler(modified, key);\n          }\n        });\n        return _.isEmpty(modified) ? undefined : modified;\n      }\n      return copy;\n    }\n\n    function cleanEmptyJson(copy, original) {\n      if (_.isArray(copy)) {\n        return _.map(copy, function (x, i) {\n          return cleanEmptyJson(x, original ? original[i] : undefined);\n        });\n      }\n      if (_.isObject(copy)) {\n        var ret = {},\n            k = void 0,\n            v = void 0,\n            a = void 0,\n            b = void 0;\n        for (k in copy) {\n          a = copy[k];\n          b = _.get(original, k);\n          if (!_.isTrulyEmpty(a, null)) {\n            v = cleanEmptyJson(a, b);\n            if (!_.isUndefined(v)) ret[k] = v;\n          }\n        }\n        return _.isEmpty(ret) ? undefined : ret;\n      }\n      return copy;\n    }\n\n    function undefinedAndFalsy(a, b) {\n      return (a === undefined || b === undefined) && (a === false || a === 0 || b === false || b === 0);\n    }\n\n    /* Ripping off angular.equals but treating empty array and undefined/null as equal */\n    function equals(a, b) {\n      if (a === b || _.isTrulyEmpty(a, null) && _.isTrulyEmpty(b, null) && !undefinedAndFalsy(a, b)) return true;\n      var ta = typeof a === 'undefined' ? 'undefined' : _typeof(a),\n          tb = typeof b === 'undefined' ? 'undefined' : _typeof(b),\n          l = void 0,\n          k = void 0,\n          ks = void 0;\n      if (ta === tb && ta === 'object' && _.isObject(a) && _.isObject(b)) {\n        if (_.isArray(a)) {\n          if (!_.isArray(b)) return false;\n          if ((l = a.length) === b.length) {\n            for (k = 0; k < l; k++) {\n              if (!equals(a[k], b[k])) return false;\n            }\n            return true;\n          }\n        } else if (_.isDate(a)) {\n          return _.isDate(b) && equals(a.getTime(), b.getTime());\n        } else if (_.isRegExp(a)) {\n          return _.isRegExp(b) && a.toString() === b.toString();\n        } else {\n          if (_.isArray(b) || _.isDate(b) || _.isRegExp(b)) return false;\n          ks = Object.create(null);\n          for (k in a) {\n            if (k.charAt(0) === '$' || _.isFunction(a[k])) continue;\n            if (!equals(a[k], b[k])) return false;\n            if (!_.isTrulyEmpty(a[k], null)) ks[k] = true;\n          }\n          for (k in b) {\n            if (!(k in ks) && k.charAt(0) !== '$' && !_.isTrulyEmpty(b[k], null) && !_.isFunction(b[k])) return false;\n          }\n          return true;\n        }\n      }\n      return false;\n    }\n\n    function inheritCommon(from, to) {\n      _.each(to, function (val, key) {\n        if (key in from) {\n          val = from[key];\n          if (_.isObject(val) && !_.isArray(val) && to[key]) {\n            to[key] = inheritCommon(val, to[key]);\n          } else {\n            to[key] = val;\n          }\n        }\n      });\n      return to;\n    }\n\n    function extend(base, sub) {\n      // Avoid instantiating the base class just to setup inheritance\n      // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create\n      // for a polyfill\n      // Also, do a recursive merge of two prototypes, so we don't overwrite\n      // the existing prototype, but still maintain the inheritance chain\n      // Thanks to @ccnokes\n      var ogProto = sub.prototype;\n      sub.prototype = Object.create(base.prototype);\n      _.extend(sub.prototype, ogProto);\n      // Remember the constructor property was set wrong, let's fix it\n      sub.prototype.constructor = sub;\n      // In ECMAScript5+ (all modern browsers), you can make the constructor property\n      // non-enumerable if you define it like this instead\n      Object.defineProperty(sub.prototype, 'constructor', {\n        enumerable: false,\n        value: sub\n      });\n    }\n\n    /**\n     * Used to build an HTML representation of the description keys in the errors array.\n     * See: API call GET /campaigns/:id/subCampaigns/status<\n     *\n     * Sample HTML <p>One error<br/>Another error</p>\n     *\n     * @param errors{array}\n     * @returns {string}\n     */\n    function constructErrorMessageAsHtml(errors) {\n      var errorMessage = '';\n      errors.forEach(function (error) {\n        errorMessage = errorMessage + '<p class=\"cn-error\">' + error.description + '</p>';\n      });\n      return errorMessage;\n    }\n\n    /**\n     * Used to append a popoverHtml key on the objects (campaigns, adSets, ads)\n     * that contains the name and id of the object so it can be show in in the popover\n     *\n     * @param objectsArray\n     * @param nameKey\n     * @param idKey\n     * @returns {*}\n     */\n    function constructPopoverHtml(objectsArray, nameKey, idKey) {\n      objectsArray.forEach(function (object) {\n        object.popoverHtml = '<p class=\"popover-text\">Name: ' + object[nameKey] + '</p>' + '<p class=\"popover-text\">ID: ' + object[idKey] + '</p>';\n      });\n      return objectsArray;\n    }\n  });\n})();","(function() {\n  'use strict';\n\n  /**\n   * Some useful util functions to add to lodash/underscore\n   *\n   * author: dzuch\n   */\n\n  _.mixin({\n    allEqual,\n    empty,\n    add,\n    subtract,\n    multiply,\n    divide,\n    round,\n    floor,\n    ceil,\n    percentage,\n    isFalsy,\n    isTrulyEmpty,\n    /* deprecate if upgrading lodash to v4 */\n    nth,\n\n    /* TODO: remove this, not needed and can achieve with lodash\n     * Override lodash's range to allow high to low ranges\n     */\n    range,\n    titleCase\n  });\n\n  ////////\n\n  function nth(array, n) {\n    if(array && array.length) {\n      let l = array.length;\n      n += n < 0 ? l : 0;\n      if(n > l) return array[n];\n    }\n  }\n\n  function isFalsy(x) {\n    if(!x) return true;\n    if(_.isObject(x)) {\n      if(_.isDate(x) || _.isRegExp(x)) return false;\n      if(_.isEmpty(x)) return true;\n      return _.every(x, _.isFalsy);\n    }\n    return false;\n  }\n\n  function isTrulyEmpty(x, ...emptyVals) {\n    return (\n      x === undefined ||\n      _.some(emptyVals, v => x === v) ||\n      _.isObject(x) && !x.length && _.every(x, y => _.isTrulyEmpty(y, ...emptyVals))\n    );\n  }\n\n  function allEqual(vals) {\n    let first = _.first(vals);\n    if(_.isArray(first) && !_.isObject(_.first(first))) {\n      return _.allEqual(vals.map(v => JSON.stringify(v)));\n    }\n    if(_.isObject(first)) {\n      return _.every(vals, _.matches(first));\n    }\n    return _.uniq(vals).length === 1;\n  }\n\n  function empty(obj) {\n    if(_.isArray(obj)) {\n      obj.length = 0;\n      return obj;\n    }\n    _.each(obj, function(val, key) {\n      delete obj[key];\n    });\n    return obj;\n  }\n\n  function add(x) {\n    x = _.isArray(x) ? x : [].slice.call(arguments);\n\n    return _.reduce(x, function(a, b) {\n      a = parseFloat(a);\n      b = parseFloat(b);\n      return (Math.round(a * 100) + Math.round(b * 100)) / 100;\n    });\n  }\n\n  function subtract(x) {\n    x = _.isArray(x) ? x : [].slice.call(arguments);\n\n    return _.reduce(x, function(a, b) {\n      a = parseFloat(a);\n      b = parseFloat(b);\n      return (Math.round(a * 100) - Math.round(b * 100)) / 100;\n    });\n  }\n\n  function multiply(x) {\n    x = _.isArray(x) ? x : [].slice.call(arguments);\n\n    return _.reduce(x, function(a, b) {\n      a = parseFloat(a);\n      b = parseFloat(b);\n      return (Math.round(a * 100) * Math.round(b * 100)) / 10000;\n    });\n  }\n\n  function divide(x) {\n    x = _.isArray(x) ? x : [].slice.call(arguments);\n\n    return _.reduce(x, function(a, b) {\n      a = parseFloat(a);\n      b = parseFloat(b);\n      return (Math.round(a * 100) / Math.round(b * 100));\n    });\n  }\n\n  function round(x, p) {\n    p = Math.pow(10, p || 0);\n    return Math.round(parseFloat(x) * p) / p;\n  }\n\n  function floor(x, p) {\n    p = Math.pow(10, p || 0);\n    return Math.floor(parseFloat(x) * p) / p;\n  }\n\n  function ceil(x, p) {\n    p = Math.pow(10, p || 0);\n    return Math.ceil(parseFloat(x) * p) / p;\n  }\n\n  function percentage(a, b, overflow) {\n    var result = _.round(100 * a / b);\n    if(!overflow) {\n      if(result > 100) result = 100;\n      else if(result < 0) result = 0;\n    }\n    return result;\n  }\n\n  function range(start, end) {\n    start = Number(start);\n    end = Number(end);\n    var result = [],\n        dir = (start <= end) ? 1 : -1;\n    //end = end + dir;\n    while(start !== end) {\n      result.push(start);\n      start += dir;\n    }\n    return result;\n  }\n\n  function titleCase(str) {\n    return _.flow(\n      _.words,\n      _.partial(_.map, _, _.capitalize),\n      w => w.join(\" \")\n    )(str);\n  }\n\n})();\n","(function() {\n  'use strict';\n  /**\n   * Definition for the cn.model module\n   */\n  angular.module('cn.util', [])\n      .factory('cnUtil', function() {\n        let removeStretegies = {\n          'delete': (obj, key) => {delete obj[key];},\n          'null': (obj, key) => {obj[key] = null;}\n        };\n\n        return {\n          buildParams,\n          buildSref,\n          cleanModel,\n          cleanModelVal,\n          cleanEmptyJson,\n          diff,\n          getModified,\n          inheritCommon,\n          extend,\n          constructErrorMessageAsHtml,\n          constructPopoverHtml,\n          equals\n        };\n\n        /////////\n\n        function buildParams(...params) {\n          if(!params[0]) return '';\n          if(_.isArray(params[0])) params = params[0];\n\n          if(params.length > 1) {\n            params = params.reduceRight((prev, cur) => _.assign(prev, cur), {});\n          }\n          else params = params[0];\n          return _.isString(params) ? params : angular.toJson(params);\n        }\n\n        function buildSref(state, ...params) {\n          return `${state}(${buildParams(...params)})`;\n        }\n\n        function cleanModel(model) {\n          _.each(model, cleanModelVal);\n          return model;\n        }\n\n        function cleanModelVal(modelVal) {\n          // if array,\n          if(_.isArray(modelVal)) {\n            modelVal.forEach(cleanModelVal);\n          }\n          else if(_.isObject(modelVal)) {\n            _.each(modelVal, (val, key) => {\n              if(val === null || val === undefined) delete modelVal[key];\n              else if(_.isArray(val)) val.forEach(cleanModelVal);\n              else if(_.isObject(val)) cleanModelVal(val);\n            });\n          }\n        }\n\n        function diff(original, current, deep, removeStrategy) {\n          return getModified(original, current, removeStrategy, !deep);\n        }\n\n        function getModified(original, copy, removeStrategy, shallow) {\n          let removeHandler = removeStretegies[removeStrategy] || removeStretegies[null];\n          let eq = shallow ? equals : angular.equals;\n\n          if(eq(original, copy)) return;\n          if(_.isObject(copy) && !_.isArray(copy)) {\n            let modified = {};\n            _.each(copy, (val, key) => {\n              if(shallow) {\n                if(!eq(val, original[key])) {\n                  modified[key] = cleanEmptyJson(val, original[key]);\n                }\n              }\n              else {\n                let tmp = original[key] ?\n                    getModified(original[key], val, removeStrategy) :\n                    val;\n                if(tmp !== undefined && !eq(original[key], tmp)) modified[key] = tmp;\n              }\n            });\n            _.each(original, (val, key) => {\n              if(val && (copy[key] === null || copy[key] === undefined)) {\n                removeHandler(modified, key);\n              }\n            });\n            return _.isEmpty(modified) ? undefined : modified;\n          }\n          return copy;\n        }\n\n        function cleanEmptyJson(copy, original) {\n          if(_.isArray(copy)) {\n            return _.map(\n              copy,\n              (x, i) => cleanEmptyJson(x, original ? original[i] : undefined)\n            );\n          }\n          if(_.isObject(copy)) {\n            let ret = {}, k, v, a, b;\n            for(k in copy) {\n              a = copy[k];\n              b = _.get(original, k);\n              if(!_.isTrulyEmpty(a, null)) {\n                v = cleanEmptyJson(a, b);\n                if(!_.isUndefined(v)) ret[k] = v;\n              }\n            }\n            return _.isEmpty(ret) ? undefined : ret;\n          }\n          return copy;\n        }\n\n        function undefinedAndFalsy(a, b) {\n          return (\n            (a === undefined || b === undefined) &&\n            (a === false || a === 0 || b === false || b === 0)\n          );\n        }\n\n        /* Ripping off angular.equals but treating empty array and undefined/null as equal */\n        function equals(a, b) {\n          if(a === b ||\n             (_.isTrulyEmpty(a, null) &&\n              _.isTrulyEmpty(b, null) &&\n              !undefinedAndFalsy(a, b))\n            ) return true;\n          let ta = typeof a, tb = typeof b, l, k, ks;\n          if(ta === tb && ta === 'object' && _.isObject(a) && _.isObject(b)) {\n            if(_.isArray(a)) {\n              if(!_.isArray(b)) return false;\n              if((l = a.length) === b.length) {\n                for(k = 0; k < l; k++) {\n                  if(!equals(a[k], b[k])) return false;\n                }\n                return true;\n              }\n            }\n            else if(_.isDate(a)) {\n              return _.isDate(b) && equals(a.getTime(), b.getTime());\n            }\n            else if(_.isRegExp(a)) {\n              return _.isRegExp(b) && a.toString() === b.toString();\n            }\n            else {\n              if(_.isArray(b) || _.isDate(b) || _.isRegExp(b)) return false;\n              ks = Object.create(null);\n              for(k in a) {\n                if(k.charAt(0) === '$' || _.isFunction(a[k])) continue;\n                if(!equals(a[k], b[k])) return false;\n                if(!_.isTrulyEmpty(a[k], null)) ks[k] = true;\n              }\n              for(k in b) {\n                if(!(k in ks) &&\n                    k.charAt(0) !== '$' &&\n                    !_.isTrulyEmpty(b[k], null) &&\n                    !_.isFunction(b[k])) return false;\n              }\n              return true;\n            }\n          }\n          return false;\n        }\n\n        function inheritCommon(from, to) {\n          _.each(to, function(val, key) {\n            if(key in from) {\n              val = from[key];\n              if(_.isObject(val) && !_.isArray(val) && to[key]) {\n                to[key] = inheritCommon(val, to[key]);\n              }\n              else {\n                to[key] = val;\n              }\n            }\n          });\n          return to;\n        }\n\n        function extend(base, sub) {\n          // Avoid instantiating the base class just to setup inheritance\n          // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create\n          // for a polyfill\n          // Also, do a recursive merge of two prototypes, so we don't overwrite\n          // the existing prototype, but still maintain the inheritance chain\n          // Thanks to @ccnokes\n          var ogProto = sub.prototype;\n          sub.prototype = Object.create(base.prototype);\n          _.extend(sub.prototype, ogProto);\n          // Remember the constructor property was set wrong, let's fix it\n          sub.prototype.constructor = sub;\n          // In ECMAScript5+ (all modern browsers), you can make the constructor property\n          // non-enumerable if you define it like this instead\n          Object.defineProperty(sub.prototype, 'constructor', {\n            enumerable: false,\n            value: sub\n          });\n        }\n\n        /**\n         * Used to build an HTML representation of the description keys in the errors array.\n         * See: API call GET /campaigns/:id/subCampaigns/status<\n         *\n         * Sample HTML <p>One error<br/>Another error</p>\n         *\n         * @param errors{array}\n         * @returns {string}\n         */\n        function constructErrorMessageAsHtml(errors) {\n          var errorMessage = '';\n          errors.forEach(function(error) {\n            errorMessage = errorMessage + '<p class=\"cn-error\">' + error.description + '</p>';\n          });\n          return errorMessage;\n        }\n\n        /**\n         * Used to append a popoverHtml key on the objects (campaigns, adSets, ads)\n         * that contains the name and id of the object so it can be show in in the popover\n         *\n         * @param objectsArray\n         * @param nameKey\n         * @param idKey\n         * @returns {*}\n         */\n        function constructPopoverHtml(objectsArray, nameKey, idKey) {\n          objectsArray.forEach(function(object) {\n            object.popoverHtml = '<p class=\"popover-text\">Name: ' + object[nameKey] + '</p>' + '<p class=\"popover-text\">ID: ' + object[idKey] + '</p>';\n          });\n          return objectsArray;\n        }\n      });\n})();\n"]}